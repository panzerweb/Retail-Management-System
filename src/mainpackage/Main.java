/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mainpackage;

import java.sql.*;
import java.sql.Connection;
import java.sql.Statement;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public final class Main extends javax.swing.JFrame {

    //Database Connection Variables
    static final String db_url = "jdbc:mysql://localhost:3306/retail_db";
    static final String username = "root";
    static final String password = "";
    
    CardLayout cardLayout;
    public Main() {
        initComponents();
        dateTime();
        
        cardLayout = (CardLayout)(panelCards.getLayout());
        
        
        
        salesTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD,18));
        salesTable.getTableHeader().setOpaque(false);
//      listTable.getTableHeader().setBackground(new Color(32,136,203));
//      listTable.getTableHeader().setForeground(new Color(255,255,255));
        salesTable.getRowHeight(25);
        
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(3,218,197));
        headerRenderer.setForeground(new Color(0,0,0));


        for (int i = 0; i < salesTable.getModel().getColumnCount(); i++) {
                salesTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
            
    }
    
    public void dateTime(){
        Date d = new Date();
         
        SimpleDateFormat sdf =  new SimpleDateFormat("yyyy-MM-dd");
        
        String dateFormat = sdf.format(d);
        dateField.setText(dateFormat);
                 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSplitPane1 = new javax.swing.JSplitPane();
        navigationbars = new javax.swing.JPanel();
        Transaction = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        ReportPanel = new javax.swing.JButton();
        profileBtn = new javax.swing.JButton();
        salesTableHistory = new javax.swing.JButton();
        developerBtn = new javax.swing.JButton();
        panelCards = new javax.swing.JPanel();
        transactionPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        itemNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totalAmountField = new javax.swing.JTextField();
        qtySpinner = new javax.swing.JSpinner();
        addPurchaseBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        paymentPaidField = new javax.swing.JTextField();
        changeConfirm = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        searchAndListPanel = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        totalPaymentsDisplay = new javax.swing.JTextField();
        totalSalesDisplay = new javax.swing.JTextField();
        balanceDisplay = new javax.swing.JTextField();
        surplusDisplay = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        title1 = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        dateChooserSearch = new com.toedter.calendar.JDateChooser();
        searchTableBtn = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        title2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        printButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        developerPanel = new javax.swing.JPanel();
        title3 = new javax.swing.JLabel();
        title4 = new javax.swing.JLabel();
        imageDev = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        profilePanel = new javax.swing.JPanel();
        title5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(0);

        navigationbars.setBackground(new java.awt.Color(0, 0, 0));

        Transaction.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Transaction.setForeground(new java.awt.Color(0, 0, 0));
        Transaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add-to-cart.png"))); // NOI18N
        Transaction.setText("Add Purchase");
        Transaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionActionPerformed(evt);
            }
        });

        logo.setForeground(new java.awt.Color(255, 255, 255));
        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Brand Logo - 60px.png"))); // NOI18N

        ReportPanel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ReportPanel.setForeground(new java.awt.Color(0, 0, 0));
        ReportPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/monitoring.png"))); // NOI18N
        ReportPanel.setText("Report Sales");
        ReportPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportPanelActionPerformed(evt);
            }
        });

        profileBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        profileBtn.setForeground(new java.awt.Color(0, 0, 0));
        profileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/user.png"))); // NOI18N
        profileBtn.setText("Profile");
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        salesTableHistory.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        salesTableHistory.setForeground(new java.awt.Color(0, 0, 0));
        salesTableHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/increase.png"))); // NOI18N
        salesTableHistory.setText("Sales Table");
        salesTableHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesTableHistoryActionPerformed(evt);
            }
        });

        developerBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        developerBtn.setForeground(new java.awt.Color(0, 0, 0));
        developerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/id-card.png"))); // NOI18N
        developerBtn.setText("Developer");
        developerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                developerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navigationbarsLayout = new javax.swing.GroupLayout(navigationbars);
        navigationbars.setLayout(navigationbarsLayout);
        navigationbarsLayout.setHorizontalGroup(
            navigationbarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationbarsLayout.createSequentialGroup()
                .addGroup(navigationbarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationbarsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(navigationbarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Transaction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ReportPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(navigationbarsLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(navigationbarsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salesTableHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(navigationbarsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(developerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        navigationbarsLayout.setVerticalGroup(
            navigationbarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationbarsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Transaction, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salesTableHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(developerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jSplitPane1.setLeftComponent(navigationbars);

        panelCards.setBackground(new java.awt.Color(18, 27, 36));
        panelCards.setLayout(new java.awt.CardLayout());

        transactionPanel.setBackground(new java.awt.Color(18, 18, 18));

        title.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Retail Sales Transaction Management System");

        container.setBackground(new java.awt.Color(59, 58, 58));
        container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(3, 218, 197)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Item Name");

        itemNameField.setBackground(new java.awt.Color(59, 58, 58));
        itemNameField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        itemNameField.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Payment");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Price");

        priceField.setBackground(new java.awt.Color(59, 58, 58));
        priceField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        priceField.setForeground(new java.awt.Color(255, 255, 255));
        priceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceFieldKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Total Amount");

        totalAmountField.setEditable(false);
        totalAmountField.setBackground(new java.awt.Color(59, 58, 58));
        totalAmountField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        totalAmountField.setForeground(new java.awt.Color(255, 255, 255));

        qtySpinner.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        qtySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        qtySpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        qtySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                qtySpinnerStateChanged(evt);
            }
        });

        addPurchaseBtn.setBackground(new java.awt.Color(3, 218, 197));
        addPurchaseBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addPurchaseBtn.setForeground(new java.awt.Color(0, 0, 0));
        addPurchaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/decrease.png"))); // NOI18N
        addPurchaseBtn.setText("Add Purchase");
        addPurchaseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addPurchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPurchaseBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Quantity");

        paymentPaidField.setBackground(new java.awt.Color(59, 58, 58));
        paymentPaidField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        paymentPaidField.setForeground(new java.awt.Color(255, 255, 255));

        changeConfirm.setBackground(new java.awt.Color(3, 218, 197));
        changeConfirm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        changeConfirm.setForeground(new java.awt.Color(0, 0, 0));
        changeConfirm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Settled" }));
        changeConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Status");

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                            .addComponent(qtySpinner))
                        .addGap(28, 28, 28)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(containerLayout.createSequentialGroup()
                                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(priceField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(paymentPaidField))
                                .addGap(29, 29, 29))))
                    .addGroup(containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(containerLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(223, 223, 223))
                            .addGroup(containerLayout.createSequentialGroup()
                                .addComponent(totalAmountField)
                                .addGap(28, 28, 28)))
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                        .addGap(0, 177, Short.MAX_VALUE)
                        .addComponent(addPurchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(173, Short.MAX_VALUE))))
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paymentPaidField)
                    .addComponent(qtySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(addPurchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dateField.setEditable(false);
        dateField.setBackground(new java.awt.Color(18, 18, 18));
        dateField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        dateField.setForeground(new java.awt.Color(255, 255, 255));
        dateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Date");

        javax.swing.GroupLayout transactionPanelLayout = new javax.swing.GroupLayout(transactionPanel);
        transactionPanel.setLayout(transactionPanelLayout);
        transactionPanelLayout.setHorizontalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addGroup(transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE))
                    .addGroup(transactionPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(transactionPanelLayout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addGroup(transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        transactionPanelLayout.setVerticalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        panelCards.add(transactionPanel, "card1");

        searchAndListPanel.setBackground(new java.awt.Color(18, 18, 18));

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search.png"))); // NOI18N
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Surplus");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Total Sales");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Total Payments");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Balance");

        totalPaymentsDisplay.setEditable(false);
        totalPaymentsDisplay.setBackground(new java.awt.Color(59, 58, 58));
        totalPaymentsDisplay.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        totalPaymentsDisplay.setForeground(new java.awt.Color(255, 255, 255));

        totalSalesDisplay.setEditable(false);
        totalSalesDisplay.setBackground(new java.awt.Color(59, 58, 58));
        totalSalesDisplay.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        totalSalesDisplay.setForeground(new java.awt.Color(255, 255, 255));

        balanceDisplay.setEditable(false);
        balanceDisplay.setBackground(new java.awt.Color(59, 58, 58));
        balanceDisplay.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        balanceDisplay.setForeground(new java.awt.Color(255, 255, 255));

        surplusDisplay.setEditable(false);
        surplusDisplay.setBackground(new java.awt.Color(59, 58, 58));
        surplusDisplay.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        surplusDisplay.setForeground(new java.awt.Color(255, 255, 255));

        dateChooser.setBackground(new java.awt.Color(18, 18, 18));
        dateChooser.setForeground(new java.awt.Color(0, 0, 0));

        title1.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        title1.setForeground(new java.awt.Color(255, 255, 255));
        title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1.setText("Retail Sales Transaction Management System");

        javax.swing.GroupLayout searchAndListPanelLayout = new javax.swing.GroupLayout(searchAndListPanel);
        searchAndListPanel.setLayout(searchAndListPanelLayout);
        searchAndListPanelLayout.setHorizontalGroup(
            searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchAndListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAndListPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchAndListPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(searchAndListPanelLayout.createSequentialGroup()
                                        .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(searchAndListPanelLayout.createSequentialGroup()
                                        .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(totalSalesDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(totalPaymentsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                                        .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(surplusDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(balanceDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAndListPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(11, 11, 11)))))
                                .addGap(47, 47, 47))
                            .addGroup(searchAndListPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))))
                    .addComponent(title1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        searchAndListPanelLayout.setVerticalGroup(
            searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchAndListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalSalesDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(balanceDisplay))
                .addGap(6, 6, 6)
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchAndListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPaymentsDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surplusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(180, Short.MAX_VALUE))
        );

        panelCards.add(searchAndListPanel, "card2");

        tablePanel.setBackground(new java.awt.Color(18, 18, 18));
        tablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dateChooserSearch.setBackground(new java.awt.Color(18, 18, 18));
        tablePanel.add(dateChooserSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 114, 432, 50));

        searchTableBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search.png"))); // NOI18N
        searchTableBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTableBtnActionPerformed(evt);
            }
        });
        tablePanel.add(searchTableBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 114, 72, 50));

        salesTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Price", "Qty", "Amount", "Payment", "Change", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salesTable.setRowHeight(40);
        salesTable.setSelectionBackground(new java.awt.Color(0, 102, 102));
        salesTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        salesTable.getTableHeader().setReorderingAllowed(false);
        salesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(salesTable);
        if (salesTable.getColumnModel().getColumnCount() > 0) {
            salesTable.getColumnModel().getColumn(0).setResizable(false);
            salesTable.getColumnModel().getColumn(1).setResizable(false);
            salesTable.getColumnModel().getColumn(2).setResizable(false);
            salesTable.getColumnModel().getColumn(3).setResizable(false);
            salesTable.getColumnModel().getColumn(4).setResizable(false);
            salesTable.getColumnModel().getColumn(5).setResizable(false);
            salesTable.getColumnModel().getColumn(6).setResizable(false);
            salesTable.getColumnModel().getColumn(7).setResizable(false);
        }

        tablePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 182, 730, 297));

        title2.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        title2.setForeground(new java.awt.Color(255, 255, 255));
        title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title2.setText("Retail Sales Transaction Management System");
        tablePanel.add(title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 730, 55));

        jPanel1.setBackground(new java.awt.Color(18, 18, 18));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        printButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/printer.png"))); // NOI18N
        printButton.setText("Print");
        printButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        jPanel1.add(printButton);

        editButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/edit-text.png"))); // NOI18N
        editButton.setText("Edit");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel1.add(editButton);

        deleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton);

        tablePanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 400, 60));

        panelCards.add(tablePanel, "card3");

        developerPanel.setBackground(new java.awt.Color(18, 18, 18));
        developerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title3.setFont(new java.awt.Font("Eras Bold ITC", 0, 36)); // NOI18N
        title3.setForeground(new java.awt.Color(0, 255, 204));
        title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title3.setText("DEVELOPER");
        developerPanel.add(title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 710, 55));

        title4.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        title4.setForeground(new java.awt.Color(255, 255, 255));
        title4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title4.setText("Retail Sales Transaction Management System");
        developerPanel.add(title4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 710, 55));

        imageDev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/CV Pic.png"))); // NOI18N
        imageDev.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        developerPanel.add(imageDev, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, 200));

        jPanel2.setBackground(new java.awt.Color(40, 40, 40));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane3.setBorder(null);

        jTextArea2.setBackground(new java.awt.Color(18, 18, 18));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setTabSize(3);
        jTextArea2.setText("\tHi! I am Romeo Selwyn M. Villar, an apsiring Web Developer, Layout Artist, and Software Developer. A First-Year BSIT Student at Davao del Norte State College that is very excited to learn new stuffs and build different useful systems, websites, and design a lot of Graphic-Related Outputs.\n\n\tThis System called Retail Sales Transaction Management System is mainly developed as a tool for Sari-Sari Stores to help keep track of their sales and revenue with its P.O.S System-like transaction. A project such as this is open to everyone who is interested in having this system. ");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea2);

        jPanel2.add(jScrollPane3);

        developerPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 630, 200));

        jPanel3.setBackground(new java.awt.Color(18, 18, 18));
        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        jLabel12.setBackground(new java.awt.Color(18, 18, 18));
        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Name :  Romeo Selwyn Villar");
        jPanel3.add(jLabel12);

        jScrollPane2.setBorder(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(18, 18, 18));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("Profession :  Web Developer, Layout Artist, Software Developer");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(null);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane2);

        developerPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 410, 190));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/social.png"))); // NOI18N
        jLabel13.setText("Github Repository ");
        developerPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, 160, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("https://github.com/panzerweb/Retail-Management-System.git");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        developerPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 570, 420, -1));

        panelCards.add(developerPanel, "card5");

        profilePanel.setBackground(new java.awt.Color(18, 18, 18));

        title5.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        title5.setForeground(new java.awt.Color(255, 255, 255));
        title5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title5.setText("Retail Sales Transaction Management System");

        jPanel4.setBackground(new java.awt.Color(18, 18, 18));
        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Username");
        jPanel4.add(jLabel15);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(59, 58, 58));
        jTextField1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setToolTipText("Username");
        jPanel4.add(jTextField1);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Email Address");
        jPanel4.add(jLabel16);

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(59, 58, 58));
        jTextField3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setToolTipText("Email");
        jPanel4.add(jTextField3);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Password");
        jPanel4.add(jLabel17);

        jPasswordField1.setBackground(new java.awt.Color(59, 58, 58));
        jPasswordField1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setToolTipText("Password");
        jPanel4.add(jPasswordField1);

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(title5, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        panelCards.add(profilePanel, "card4");

        jSplitPane1.setRightComponent(panelCards);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionActionPerformed
        cardLayout.show(panelCards, "card1");
    }//GEN-LAST:event_TransactionActionPerformed

    private void ReportPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportPanelActionPerformed
        cardLayout.show(panelCards, "card2");
    }//GEN-LAST:event_ReportPanelActionPerformed

    private void addPurchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPurchaseBtnActionPerformed
        String item_name = itemNameField.getText().trim();
        String priceInput = priceField.getText().trim();    
        String qtyInput = qtySpinner.getValue().toString().trim();
        String paymentInput = paymentPaidField.getText().trim();
        String statusInput = (String) changeConfirm.getSelectedItem();
        
        
        // Check if any fields are empty
        if (item_name.isEmpty() || priceInput.isEmpty() || qtyInput.isEmpty() || paymentInput.isEmpty() || statusInput.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields must be filled out.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            int price = Integer.parseInt(priceInput);
            int quantity = Integer.parseInt(qtyInput);
            int payment = Integer.parseInt(paymentInput);
            int amount = price * quantity;
            int change = payment - amount;
            
            Date date = new Date();
            
            String insertItem = "INSERT INTO item_table (item_id, item_name, price, quantity,amount, payment_paid, change_amount, status,purchase_date) VALUES (?,?,?,?,?,?,?,?,?)";           
            
            
            try {
                Connection conn = (Connection) DriverManager.getConnection(db_url, username, password);
                
                    PreparedStatement pstmtItem = conn.prepareStatement(insertItem, Statement.RETURN_GENERATED_KEYS);
                    
                    ResultSet rs = pstmtItem.getGeneratedKeys();
                    
                    int itemId = 0;
                        if (rs.next()) {
                            itemId = rs.getInt(1);
                            System.out.println("Generated Id : " + itemId);
                    }
                    
                    pstmtItem.setInt(1, itemId);
                    pstmtItem.setString(2, item_name);
                    pstmtItem.setInt(3, price);
                    pstmtItem.setInt(4, quantity);
                    pstmtItem.setInt(5, amount);
                    pstmtItem.setInt(6, payment);
                    pstmtItem.setInt(7, change);
                    pstmtItem.setString(8, statusInput);
                    pstmtItem.setDate(9, new java.sql.Date(date.getTime()));
                    
                    
                    pstmtItem.executeUpdate();
                    
                    itemNameField.setText("");
                    priceField.setText("");
                    qtySpinner.setValue(0);
                    totalAmountField.setText("");
                    paymentPaidField.setText("");
                    
                                       
        } catch (SQLException e) {
            e.printStackTrace();
        }
            
    }//GEN-LAST:event_addPurchaseBtnActionPerformed

    private void priceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceFieldKeyTyped

    }//GEN-LAST:event_priceFieldKeyTyped

    private void priceFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceFieldKeyPressed

    }//GEN-LAST:event_priceFieldKeyPressed

    private void qtySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_qtySpinnerStateChanged
        try {
            int quantity = (int) qtySpinner.getValue();
            int price = Integer.parseInt(priceField.getText());
            
            int amount = quantity * price;
            
            totalAmountField.setText(String.valueOf(amount));
            
        } catch (NumberFormatException  e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_qtySpinnerStateChanged

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
        cardLayout.show(panelCards, "card4");
    }//GEN-LAST:event_profileBtnActionPerformed

    private void salesTableHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesTableHistoryActionPerformed
        cardLayout.show(panelCards, "card3");
    }//GEN-LAST:event_salesTableHistoryActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        Date dateChoice = dateChooser.getDate();
        
            if(dateChoice == null){
                JOptionPane.showMessageDialog(this, "No Date Specified");
            }
            else{
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String dateString = dateFormat.format(dateChoice);
                
                
                //Queries for MySQL
                String totalSales = "SELECT SUM(item_table.amount) AS total_amount FROM item_table " +
                                    "WHERE item_table.purchase_date = ?";
                
                String totalPaidMoney ="SELECT SUM(item_table.payment_paid) AS total_payment FROM item_table " +
                                    "WHERE item_table.purchase_date = ?";
                
                String surplusMoney = "SELECT SUM(item_table.payment_paid) AS total_payment, SUM(item_table.amount) AS total_amount, " +
                                        "SUM(item_table.payment_paid) - SUM(item_table.amount) AS difference " +
                                        "FROM item_table " +
                                        "WHERE item_table.purchase_date = ?";
                
                String balanceMoney = "SELECT SUM(item_table.payment_paid) AS total_payment, SUM(item_table.amount) AS total_amount, " +
                                        "SUM(item_table.amount)- SUM(item_table.payment_paid) AS difference " +
                                        "FROM item_table " +
                                        "WHERE item_table.purchase_date = ?";
                
                
                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection conn = DriverManager.getConnection(db_url, username, password);
                        
                        //Two Prepared Statements for each SQL Query
                        PreparedStatement pstmt = conn.prepareStatement(totalSales);
                        PreparedStatement pstmtMoney = conn.prepareStatement(totalPaidMoney);
                        PreparedStatement pstmtSurplus = conn.prepareStatement(surplusMoney);
                        PreparedStatement pstmtBalance = conn.prepareStatement(balanceMoney);
                        
                        //Date Value
                        java.sql.Date sqlDate = java.sql.Date.valueOf(dateString);
                        
                        //Both SQL Query accepts the date value
                        pstmt.setDate(1, sqlDate);
                        pstmtMoney.setDate(1, sqlDate);
                        pstmtSurplus.setDate(1, sqlDate);
                        pstmtBalance.setDate(1, sqlDate);
                        
                            //For the Total Sales
                            ResultSet rs = pstmt.executeQuery();
                            int totalAmount = 0;
                                if (rs.next()) {
                                    totalAmount = rs.getInt("total_amount");
                                    
                            
                                }
                            
                            //For the Total Payments Made
                            ResultSet rsMoney = pstmtMoney.executeQuery();
                            int totalMoney = 0;
                                if (rsMoney.next()) {
                                    totalMoney = rsMoney.getInt("total_payment");
                                    
                            
                                }
                                
                            //Set the Surplus
                            ResultSet rsSurplus = pstmtSurplus.executeQuery();
                            int totalSurplus = 0;
                                if (rsSurplus.next()) {
                                    totalSurplus = rsSurplus.getInt("difference");                                                        
                                } 
                            
                            //Set the Balance
                            ResultSet rsBalance = pstmtBalance.executeQuery();
                            int totalBalance = 0;
                                if(rsBalance.next()){
                                    totalBalance = rsBalance.getInt("difference");
                                }
                                
                                
                                //Print the text on the text fields
                                totalSalesDisplay.setText(String.valueOf(totalAmount));
                                totalPaymentsDisplay.setText(String.valueOf(totalMoney));      
                           
                                                                                     
                                //Conditional Statement if its going to be printed on balance or surplus text fields
                                if (totalMoney > totalAmount) {
                                    surplusDisplay.setText(String.valueOf(totalSurplus)); 
                                    balanceDisplay.setText("");
                                }
                                else if(totalMoney < totalAmount){
                                    balanceDisplay.setText(String.valueOf(totalBalance));
                                    surplusDisplay.setText("");
                                }
                                else{
                                    balanceDisplay.setText("");
                                    surplusDisplay.setText("");
                                }
                            
                } catch (ClassNotFoundException | SQLException e) {
                        System.out.println(e);
                }
            }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTableBtnActionPerformed
        Date dateChoice = dateChooserSearch.getDate();
        
            if(dateChoice == null){
                JOptionPane.showMessageDialog(this, "No Date Specified");
            }
            else{
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String dateString = dateFormat.format(dateChoice);
                
                String selectFromDB = "SELECT * FROM item_table " + 
                                      "WHERE item_table.purchase_date = ? ";
                
                try{
                    Connection conn = DriverManager.getConnection(db_url, username, password);
                    PreparedStatement pstmt = conn.prepareStatement(selectFromDB);
                    
                    //Date Value
                    java.sql.Date sqlDate = java.sql.Date.valueOf(dateString);
                    pstmt.setDate(1, sqlDate);
              
                    ResultSet rs = pstmt.executeQuery();
                    DefaultTableModel model = (DefaultTableModel) salesTable.getModel();
                    model.setRowCount(0);
                    
                        while(rs.next()){
                            Object[] row = new Object[9];
                            row[0] = rs.getInt("item_id");
                            row[1] = rs.getString("item_name");
                            row[2] = rs.getInt("price");
                            row[3] = rs.getInt("quantity");
                            row[4] = rs.getInt("amount");
                            row[5] = rs.getInt("payment_paid");
                            row[6] = rs.getInt("change_amount");
                            row[7] = rs.getString("status");
                            row[8] = rs.getDate("purchase_date");
                            model.addRow(row);
                            
                        }
                        conn.close();
                }
                
                catch(SQLException e){
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_searchTableBtnActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printButtonActionPerformed

    private void salesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesTableMouseClicked
        String[] options = {"Edit", "Delete"};
        int choice = JOptionPane.showOptionDialog(null, 
            "Choose operation:", 
            "Operation Selection", 
            JOptionPane.DEFAULT_OPTION, 
            JOptionPane.INFORMATION_MESSAGE, 
            null, 
            options, 
            options[0]);

        if (choice == 0) {
            JOptionPane.showMessageDialog(null, "Please refer back to the Purchase Tab and come back to press edit button after updating.");
        } else if (choice == 1) {
            JOptionPane.showMessageDialog(null, "Please select row/s and click delete button to delete.");
        } else {
            JOptionPane.showMessageDialog(null, "No option selected");
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) salesTable.getModel();
        
        //Set Data to Text Field when row is selected
        String itemName = tableModel.getValueAt(salesTable.getSelectedRow(), 1).toString();
        int priceText = Integer.parseInt(tableModel.getValueAt(salesTable.getSelectedRow(), 2).toString());
        int qtyText = Integer.parseInt(tableModel.getValueAt(salesTable.getSelectedRow(), 3).toString());
        int paymentText = Integer.parseInt(tableModel.getValueAt(salesTable.getSelectedRow(), 4).toString());
        String statusText = tableModel.getValueAt(salesTable.getSelectedRow(), 6).toString();
        
        //Set it to Text Field
        itemNameField.setText(itemName);
        priceField.setText(String.valueOf(priceText));
        qtySpinner.setValue(qtyText);
        paymentPaidField.setText(String.valueOf(paymentText));
        changeConfirm.setSelectedItem(statusText);
    }//GEN-LAST:event_salesTableMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        
        
        
        DefaultTableModel tableModel = (DefaultTableModel) salesTable.getModel();

        if (salesTable.getSelectedRow() >= 0) { // Changed from == 1 to >= 0
            String itemName = itemNameField.getText();
            int priceUpdate = Integer.parseInt(priceField.getText());
            int qtyUpdate = Integer.parseInt(qtySpinner.getValue().toString());
            int paymentUpdate = Integer.parseInt(paymentPaidField.getText());
            int newAmount = priceUpdate * qtyUpdate;
            int changeUpdate = paymentUpdate - newAmount;
            String statusUpdate = (String) changeConfirm.getSelectedItem();

            // Assuming itemId is the ID of the item you want to update
            int itemId = (int) tableModel.getValueAt(salesTable.getSelectedRow(), 0);

            String updateQuery = "UPDATE item_table SET item_name =?, price =?, quantity =?, amount =?, payment_paid =?, change_amount =?, status =? " +
                                 "WHERE item_id =?";

            try {
                Connection conn = DriverManager.getConnection(db_url, username, password);
                PreparedStatement pstmt = conn.prepareStatement(updateQuery);

                pstmt.setString(1, itemName);
                pstmt.setInt(2, priceUpdate);
                pstmt.setInt(3, qtyUpdate);
                pstmt.setInt(4, newAmount);
                pstmt.setInt(5, paymentUpdate);
                pstmt.setInt(6, changeUpdate);
                pstmt.setString(7, statusUpdate);
                pstmt.setInt(8, itemId); // Set the item ID in the WHERE clause

                int affectedRows = pstmt.executeUpdate();
                if (affectedRows > 0) {
                    System.out.println("Record updated successfully.");
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }

            tableModel.setValueAt(itemName, salesTable.getSelectedRow(), 1);
            tableModel.setValueAt(priceUpdate, salesTable.getSelectedRow(), 2);
            tableModel.setValueAt(qtyUpdate, salesTable.getSelectedRow(), 3);
            tableModel.setValueAt(newAmount, salesTable.getSelectedRow(), 4);
            tableModel.setValueAt(paymentUpdate, salesTable.getSelectedRow(), 5);
            tableModel.setValueAt(changeUpdate, salesTable.getSelectedRow(), 6);
            tableModel.setValueAt(statusUpdate, salesTable.getSelectedRow(), 7);
        }
        else{
            JOptionPane.showMessageDialog(null, "No Selected Rows", "Error", JOptionPane.ERROR_MESSAGE);             

        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
         try {
                Connection conn = DriverManager.getConnection(db_url, username, password);

                //Get the Table Model and get its Rows
                DefaultTableModel model = (DefaultTableModel) salesTable.getModel();
                int[] selectedRows = salesTable.getSelectedRows();
      
                //If user does not select a row or rows   
                if (selectedRows.length == 0) {
                    JOptionPane.showMessageDialog(null, "No Selected Rows", "Error", JOptionPane.ERROR_MESSAGE);             
                }
                //If user selected rows, it would delete successfully the rows selected              
                else{
                    
                    //Options to confirm if user want to delete
                    String[] options = {"Yes", "No"};
                    int response = JOptionPane.showOptionDialog(null, "Do you Wish to Delete Selection?", "UTS", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                    
                        //If user confirms to not delete
                        if (response == JOptionPane.NO_OPTION) {
                            JOptionPane.showMessageDialog(this, "Understood");
                            return;
                        }
                        else{
                            //Delete the rows selected
                            for (int i = selectedRows.length - 1; i >= 0; i--) {

                                    int row = selectedRows[i];
                                    String value = model.getValueAt(row, 0).toString();
                                    String query = "DELETE FROM item_table WHERE item_id = " + value;

                                    PreparedStatement pst = conn.prepareStatement(query);
                                    pst.executeUpdate();
                                    model.removeRow(row);                    

                            }
                            JOptionPane.showMessageDialog(null, "Deleted Successfully");                              
                        }
                
                }

                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            } 
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void developerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_developerBtnActionPerformed
        cardLayout.show(panelCards, "card5");
    }//GEN-LAST:event_developerBtnActionPerformed

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI uri = new URI("https://github.com/panzerweb/Retail-Management-System.git");
            desktop.browse(uri);
        } catch (IOException | URISyntaxException e) {
        }
    }//GEN-LAST:event_jLabel14MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReportPanel;
    private javax.swing.JButton Transaction;
    private javax.swing.JButton addPurchaseBtn;
    private javax.swing.JTextField balanceDisplay;
    private javax.swing.JComboBox<String> changeConfirm;
    private javax.swing.JPanel container;
    private com.toedter.calendar.JDateChooser dateChooser;
    private com.toedter.calendar.JDateChooser dateChooserSearch;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton developerBtn;
    private javax.swing.JPanel developerPanel;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel imageDev;
    private javax.swing.JTextField itemNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel navigationbars;
    private javax.swing.JPanel panelCards;
    private javax.swing.JTextField paymentPaidField;
    private javax.swing.JTextField priceField;
    private javax.swing.JButton printButton;
    private javax.swing.JButton profileBtn;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JSpinner qtySpinner;
    private javax.swing.JTable salesTable;
    private javax.swing.JButton salesTableHistory;
    private javax.swing.JPanel searchAndListPanel;
    private javax.swing.JButton searchBtn;
    private javax.swing.JToggleButton searchTableBtn;
    private javax.swing.JTextField surplusDisplay;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    private javax.swing.JLabel title3;
    private javax.swing.JLabel title4;
    private javax.swing.JLabel title5;
    private javax.swing.JTextField totalAmountField;
    private javax.swing.JTextField totalPaymentsDisplay;
    private javax.swing.JTextField totalSalesDisplay;
    private javax.swing.JPanel transactionPanel;
    // End of variables declaration//GEN-END:variables
}
